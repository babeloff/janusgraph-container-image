
:submit mgmt = graph.openManagement()
makeVertexLabels = '''
defVertexLabels.forEach {labelName ->
    if (mgmt.containsVertexLabel(labelName)) {
        return;
    }
    mgmt.makeVertexLabel(labelName).make()
}; "make vertex labels"
'''
:submit @makeVertexLabels
:submit mgmt.commit(); "mgmt commit"

:submit mgmt = graph.openManagement()
makeEdgeLabelsM2O = '''
defEdgeLabelsM2O.forEach {labelName ->
    if (!mgmt.containsEdgeLabel(labelName)) {
        mgmt.makeEdgeLabel(labelName).multiplicity(org.janusgraph.core.Multiplicity.MANY2ONE).make()
    }
}; "make edge labels: many to one"
'''
:submit @makeEdgeLabelsM2O
:submit mgmt.commit(); "mgmt commit"

:submit mgmt = graph.openManagement()
makeEdgeLabelsM2M = '''
defEdgeLabelsM2M.forEach {labelName ->
    if (!mgmt.containsEdgeLabel(labelName)) {
        mgmt.makeEdgeLabel(labelName).multiplicity(org.janusgraph.core.Multiplicity.MULTI).make()
    }
}; "make edge labels: many to many"
'''
:submit @makeEdgeLabelsM2M
:submit mgmt.commit(); "mgmt commit"
