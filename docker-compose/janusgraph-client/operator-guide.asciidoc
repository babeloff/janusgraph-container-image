:title-separator: {sp}:
= Operator Guide : JanusGraph Client
:doctype: article
:revnumber: 1.0
:revdate: 2020-09-01
:revremark: The first incarnation of {doctitle}
:version-label!:
:description: Notes for designers, decisions made and instructions.
:keywords: graph tinkerpop gremlin metalab mesomodel
:graphscript: ../script/
:sectnums:
:toc:


The simplest way to connect to the server is via the
link:https://tinkerpop.apache.org/docs/3.5.1/reference/#gremlin-console[Gremlin Console].
A gradle task has been provided to assist in making this connection.

[source,gradle]
----
./gradlew startJanusgraph2Client --console=plain
----
//
//Starting the client via powershell. (In a separate terminal.)
//[source,powershell]
//----
//include::{graphscript}/start-jg-client.ps1[tag=compose-run]
//----
//
//There are alternate versions of the client script.
//One to initialize the database with a graph.
//[source,powershell]
//----
//include::{graphscript}/start-jg-client-init.ps1[tag=initialize]
//----

## Connect to the Running Server

Connect to a running server and check the schema.
[source,gremlin]
----
:remote connect tinkerpop.server conf/remote.yaml session
:load schema/00-show.groovysh
----

## Load Schema

Loading the schema and indices makes use of
link:https://javadoc.io/doc/org.janusgraph/janusgraph-core/latest/org/janusgraph/core/schema/JanusGraphManagement.html[Janusgraph Graph Management].

You can check the status of the schema as you go.
[source,gremlin]
----
:load schema/00-show.groovysh
----
Generally you want to create the properties and their global indices first.
Things just go better when you create the index in the same management
session as the constraining label (or property for global indices).

### Property Creation

* https://docs.janusgraph.org/index-management/index-performance/

Indices may be created from the gremlin console.
Here is an example.

[source,gremlin]
----
:load schema/10-property-defs.groovysh
:load schema/20-property-make.groovysh
----

### Load the Labels
[source,gremlin]
----
:load schema/11-label-defs.groovysh
:load schema/21-label-make.groovysh
----


## Load Some Data

[source,gremlin]
----
:submit g.io('/opt/janusgraph/corpus/ensample.graphml').with(IO.reader, IO.graphml).read().iterate()
----
